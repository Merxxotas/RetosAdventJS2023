//Est치n encendiendo las luces de Navidad 游꾻 en la ciudad y, como cada a침o, 춰hay que arreglarlas!
//Las luces son de dos colores: 游댮 y 游릭 . Para que el efecto sea el adecuado, siempre deben estar alternadas. 
//Es decir, si la primera luz es roja, la segunda debe ser verde, la tercera roja, la cuarta verde, etc.
//Nos han pedido que escribamos una funci칩n adjustLights que, 
//dado un array de strings con el color de cada luz (representados con los emojis 游댮 para el rojo y 游릭 para el verde), 
//devuelva el n칰mero m칤nimo de luces que hay que cambiar para que est칠n los colores alternos.
//adjustLights(['游릭', '游댮', '游릭', '游릭', '游릭'])
// -> 1 (cambias la cuarta luz a 游댮)
//adjustLights(['游댮', '游댮', '游릭', '游댮', '游릭'])
// -> 1 (cambia la primera luz a verde)
//adjustLights(['游댮', '游댮', '游릭', '游릭', '游댮'])
// -> 2 (cambias la segunda luz a 游릭 y la tercera a 游댮)
//adjustLights(['游릭', '游댮', '游릭', '游댮', '游릭'])
// -> 0 (ya est치n alternadas)
//adjustLights(['游댮', '游댮', '游댮'])
// -> 1 (cambias la segunda luz a 游릭)

function adjustLights(lights) {
  let o1 = 0; // Contador para el patr칩n rojo-verde
  let o2 = 0; // Contador para el patr칩n verde-rojo
  for (let i = 0; i < lights.length; i++) {
    // Si el color no coincide con el patr칩n, incrementar el contador correspondiente
    if (lights[i] !== '游댮' && i % 2 === 0) o1++;
    if (lights[i] !== '游릭' && i % 2 === 1) o1++;
    if (lights[i] !== '游릭' && i % 2 === 0) o2++;
    if (lights[i] !== '游댮' && i % 2 === 1) o2++;
  }
  // Devolver el menor de los dos contadores
  return Math.min(o1, o2);
}